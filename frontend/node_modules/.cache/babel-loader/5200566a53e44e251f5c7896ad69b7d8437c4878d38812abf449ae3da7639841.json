{"ast":null,"code":"import axios from \"axios\";\n\n// Get the API base URL from environment or default to the correct port\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5009/api\";\nconsole.log(\"API Base URL:\", API_BASE_URL);\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  // Updated timeout value\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle errors and redirect on unauthorized\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$config, _error$config2, _error$config3;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\"; // Redirect to login on unauthorized\n  }\n  console.error(\"API Error:\", {\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n    statusText: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.statusText,\n    data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n    message: error.message,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    fullUrl: ((_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.baseURL) + ((_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.url)\n  });\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response4","_error$config","_error$config2","_error$config3","status","removeItem","window","location","href","statusText","data","message","url","fullUrl"],"sources":["/Users/shivam/Downloads/ratings-review-system/frontend/src/config/api.js"],"sourcesContent":["import axios from \"axios\"\n\n// Get the API base URL from environment or default to the correct port\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5009/api\"\n\nconsole.log(\"API Base URL:\", API_BASE_URL)\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000, // Updated timeout value\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// Add response interceptor to handle errors and redirect on unauthorized\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"user\")\n      window.location.href = \"/login\" // Redirect to login on unauthorized\n    }\n    console.error(\"API Error:\", {\n      status: error.response?.status,\n      statusText: error.response?.statusText,\n      data: error.response?.data,\n      message: error.message,\n      url: error.config?.url,\n      fullUrl: error.config?.baseURL + error.config?.url,\n    })\n    return Promise.reject(error)\n  },\n)\n\nexport default api\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,YAAY,CAAC;;AAE1C;AACA,MAAMM,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACvBC,OAAO,EAAER,YAAY;EACrBS,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA;EACT,IAAI,EAAAN,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBO,MAAM,MAAK,GAAG,EAAE;IAClCd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,EAAC;EAClC;EACA9B,OAAO,CAACe,KAAK,CAAC,YAAY,EAAE;IAC1BW,MAAM,GAAAN,gBAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBM,MAAM;IAC9BK,UAAU,GAAAV,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBU,UAAU;IACtCC,IAAI,GAAAV,gBAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBU,IAAI;IAC1BC,OAAO,EAAElB,KAAK,CAACkB,OAAO;IACtBC,GAAG,GAAAX,aAAA,GAAER,KAAK,CAACL,MAAM,cAAAa,aAAA,uBAAZA,aAAA,CAAcW,GAAG;IACtBC,OAAO,EAAE,EAAAX,cAAA,GAAAT,KAAK,CAACL,MAAM,cAAAc,cAAA,uBAAZA,cAAA,CAAcpB,OAAO,MAAAqB,cAAA,GAAGV,KAAK,CAACL,MAAM,cAAAe,cAAA,uBAAZA,cAAA,CAAcS,GAAG;EACpD,CAAC,CAAC;EACF,OAAOlB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}