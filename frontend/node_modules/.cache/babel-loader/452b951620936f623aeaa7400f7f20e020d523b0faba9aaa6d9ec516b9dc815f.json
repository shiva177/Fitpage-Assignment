{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/shivam/Downloads/ratings-review-system/frontend/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  productId,\n  onReviewSubmitted\n}) => {\n  _s();\n  const [rating, setRating] = useState(0);\n  const [reviewText, setReviewText] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n  const validateForm = () => {\n    const newErrors = {};\n    if (!rating && !reviewText.trim()) {\n      newErrors.general = \"Please provide either a rating or a review text\";\n    }\n    if (reviewText.trim() && reviewText.trim().length < 10) {\n      newErrors.reviewText = \"Review text must be at least 10 characters long\";\n    }\n    if (reviewText.trim() && reviewText.trim().length > 1000) {\n      newErrors.reviewText = \"Review text must be less than 1000 characters\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const reviewData = {\n        product_id: Number.parseInt(productId),\n        rating: rating || null,\n        review_text: reviewText.trim() || null\n      };\n      await axios.post(\"/api/reviews\", reviewData);\n      onReviewSubmitted();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to submit review\";\n      toast.error(errorMessage);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errors.general\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rating (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n        rating: rating,\n        onRatingChange: setRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reviewText\",\n        children: \"Review (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"reviewText\",\n        value: reviewText,\n        onChange: e => setReviewText(e.target.value),\n        placeholder: \"Share your experience with this product...\",\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), errors.reviewText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errors.reviewText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"12px\",\n          color: \"#666\",\n          marginTop: \"5px\"\n        },\n        children: [reviewText.length, \"/1000 characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: submitting,\n      children: submitting ? \"Submitting...\" : \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"lXQfG/jvYg3XOQqAhjNz+0gvEU4=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","toast","StarRating","jsxDEV","_jsxDEV","ReviewForm","productId","onReviewSubmitted","rating","setRating","reviewText","setReviewText","submitting","setSubmitting","errors","setErrors","validateForm","newErrors","trim","general","length","Object","keys","handleSubmit","e","preventDefault","reviewData","product_id","Number","parseInt","review_text","post","error","_error$response","_error$response$data","errorMessage","response","data","onSubmit","children","className","fileName","lineNumber","columnNumber","onRatingChange","htmlFor","id","value","onChange","target","placeholder","rows","style","fontSize","color","marginTop","type","disabled","_c","$RefreshReg$"],"sources":["/Users/shivam/Downloads/ratings-review-system/frontend/src/components/ReviewForm.js"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport axios from \"axios\"\nimport { toast } from \"react-toastify\"\nimport StarRating from \"./StarRating\"\n\nconst ReviewForm = ({ productId, onReviewSubmitted }) => {\n  const [rating, setRating] = useState(0)\n  const [reviewText, setReviewText] = useState(\"\")\n  const [submitting, setSubmitting] = useState(false)\n  const [errors, setErrors] = useState({})\n\n  const validateForm = () => {\n    const newErrors = {}\n\n    if (!rating && !reviewText.trim()) {\n      newErrors.general = \"Please provide either a rating or a review text\"\n    }\n\n    if (reviewText.trim() && reviewText.trim().length < 10) {\n      newErrors.reviewText = \"Review text must be at least 10 characters long\"\n    }\n\n    if (reviewText.trim() && reviewText.trim().length > 1000) {\n      newErrors.reviewText = \"Review text must be less than 1000 characters\"\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!validateForm()) {\n      return\n    }\n\n    setSubmitting(true)\n\n    try {\n      const reviewData = {\n        product_id: Number.parseInt(productId),\n        rating: rating || null,\n        review_text: reviewText.trim() || null,\n      }\n\n      await axios.post(\"/api/reviews\", reviewData)\n      onReviewSubmitted()\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Failed to submit review\"\n      toast.error(errorMessage)\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {errors.general && <div className=\"error\">{errors.general}</div>}\n\n      <div className=\"form-group\">\n        <label>Rating (optional)</label>\n        <StarRating rating={rating} onRatingChange={setRating} />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"reviewText\">Review (optional)</label>\n        <textarea\n          id=\"reviewText\"\n          value={reviewText}\n          onChange={(e) => setReviewText(e.target.value)}\n          placeholder=\"Share your experience with this product...\"\n          rows=\"4\"\n        />\n        {errors.reviewText && <div className=\"error\">{errors.reviewText}</div>}\n        <div style={{ fontSize: \"12px\", color: \"#666\", marginTop: \"5px\" }}>{reviewText.length}/1000 characters</div>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={submitting}>\n        {submitting ? \"Submitting...\" : \"Submit Review\"}\n      </button>\n    </form>\n  )\n}\n\nexport default ReviewForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}